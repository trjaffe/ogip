Running ogip_check with
    input = inputs/einstein/spectra/2a0335.001.Z
    otype = None
    logfile = out/inputs3.logs/einstein/spectra/2a0335.001.Z.check.log
    verbosity = 2
    dtype = none
    vonly = False
    meta_key = rxte
Attempting to open file inputs/einstein/spectra/2a0335.001.Z
Failed to open as a FITS file.  Trying to unzip first.
Trying to gunzip it.
Trying now to open it again as FITS.
File opened successfully.
Running basic FITS verification with external call to ftverify.
Nothing from ftverify, trying with astropy.io.fits.verify(option='exception')

Checking file as type SPECTRAL (match for this file's SPECTABLE and reference extension SPECTRUM)
(If this is incorrect, rerun with --t and one of TIMING, SPECTRAL, CALDB, RMF, or ARF.

ERROR: 2a0335.001.Z does not have any of the required extension names

=============== Checking 'SPECTABLE' extension against 'SPECTRUM' standard ===============

Checking keywords:

ERROR: Key ANCRFILE incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('ANCRFILE') or h.hasCol('ANCRFILE')"
        Eval(h.Exists('ANCRFILE'))==False
        Eval(h.hasCol('ANCRFILE'))==False
ERROR: Key BACKFILE incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('BACKFILE') or h.hasCol('BACKFILE')"
        Eval(h.Exists('BACKFILE'))==False
        Eval(h.hasCol('BACKFILE'))==False
ERROR: Key CHANTYPE incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.hasVal('CHANTYPE','PHA',part=True) or h.hasVal('CHANTYPE','PI',part=True)"
        Eval(h.hasVal('CHANTYPE','PHA',part=True))==False
        Eval(h.hasVal('CHANTYPE','PI',part=True))==False
ERROR: Key CORRFILE incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('CORRFILE') or h.hasCol('CORRFILE')"
        Eval(h.Exists('CORRFILE'))==False
        Eval(h.hasCol('CORRFILE'))==False
ERROR: Key CORRSCAL incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('CORRSCAL') or h.hasCol('CORRSCAL')"
        Eval(h.Exists('CORRSCAL'))==False
        Eval(h.hasCol('CORRSCAL'))==False
ERROR: Key DETCHANS incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('DETCHANS'))==False
ERROR: Key EXPOSURE incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('EXPOSURE') or h.hasCol('EXPOSURE')"
        Eval(h.Exists('EXPOSURE'))==False
        Eval(h.hasCol('EXPOSURE'))==False
ERROR: Key HDUCLAS1 incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.hasVal('HDUCLAS1','SPECTRUM'))==False
ERROR: Key HDUCLASS incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.hasVal('HDUCLASS','OGIP'))==False
ERROR: Key POISSERR incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "( h.hasVal('POISSERR',True) and not h.hasCol('STAT_ERR') and h.hasCol('COUNTS') ) or ( h.hasCol('STAT_ERR') and not h.hasVal('POISSERR',True) )"
        Eval(h.hasVal('POISSERR',True))==False
        Eval(h.hasCol('STAT_ERR'))==False
        Eval(h.hasCol('COUNTS'))==True
        Eval(h.hasCol('STAT_ERR'))==False
        Eval(h.hasVal('POISSERR',True))==False
ERROR: Key RESPFILE incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('RESPFILE') or h.hasCol('RESPFILE')"
        Eval(h.Exists('RESPFILE'))==False
        Eval(h.hasCol('RESPFILE'))==False
WARNING3: Key AUTHOR incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('AUTHOR'))==False
WARNING3: Key BACKAPP incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('BACKAPP'))==False
WARNING3: Key BACKE* incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('BACKE*'))==False
WARNING3: Key BACKV* incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('BACKV*'))==False
WARNING3: Key CLOCKCOR incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('CLOCKCOR'))==False
WARNING3: Key CREATOR incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('CREATOR'))==False
WARNING3: Key DATE-END incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('DATE-END'))==False
WARNING3: Key DATE-OBS incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('DATE-OBS'))==False
WARNING3: Key DEADAPP incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('DEADAPP'))==False
WARNING3: Key DEADC* incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('DEADC*'))==False
WARNING3: Key DEC-OBJ incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('DEC-OBJ'))==False
WARNING3: Key DETNAM incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('DETNAM'))==False
WARNING3: Key EMAX* incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('EMAX*'))==False
WARNING3: Key EMIN* incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('EMIN*'))==False
WARNING3: Key FILTER incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('FILTER'))==False
WARNING3: Key GEOAREA incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('GEOAREA'))==False
WARNING3: Key HDUCLAS2 incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "   (h.hasVal('HDUCLAS2','TOTAL') and (h.hasVal('HDUCLAS3','RATE') or h.hasVal('HDUCLAS3','COUNT')) ) or (h.hasVal('HDUCLAS2','NET')   and (h.hasVal('HDUCLAS3','RATE') or h.hasVal('HDUCLAS3','COUNT')) ) or (h.hasVal('HDUCLAS2','BKG')   and (h.hasVal('HDUCLAS3','RATE') or h.hasVal('HDUCLAS3','COUNT')) ) or  h.hasVal('HDUCLAS2','DETECTOR')"
        Eval(h.hasVal('HDUCLAS2','TOTAL'))==False
        Eval(h.hasVal('HDUCLAS3','RATE'))==False
        Eval(h.hasVal('HDUCLAS3','COUNT'))==False
        Eval(h.hasVal('HDUCLAS2','NET'))==False
        Eval(h.hasVal('HDUCLAS3','RATE'))==False
        Eval(h.hasVal('HDUCLAS3','COUNT'))==False
        Eval(h.hasVal('HDUCLAS2','BKG'))==False
        Eval(h.hasVal('HDUCLAS3','RATE'))==False
        Eval(h.hasVal('HDUCLAS3','COUNT'))==False
        Eval(h.hasVal('HDUCLAS2','DETECTOR'))==False
WARNING3: Key HDUCLAS4 incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "(not h.hasCol('SPEC_NUM') and h.hasVal('HDUCLAS4','TYPE:I') ) or ( h.hasCol('SPEC_NUM') and h.hasVal('HDUCLAS4','TYPE:II') )"
        Eval(h.hasCol('SPEC_NUM'))==False
        Eval(h.hasVal('HDUCLAS4','TYPE:I'))==False
        Eval(h.hasCol('SPEC_NUM'))==False
        Eval(h.hasVal('HDUCLAS4','TYPE:II'))==False
WARNING3: Key HDUVERS incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.hasVal('HDUVERS','1.2.1'))==False
WARNING3: Key NPIXBACK incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('NPIXBACK'))==False
WARNING3: Key NPIXSOU incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('NPIXSOU'))==False
WARNING3: Key OBJECT incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('OBJECT'))==False
WARNING3: Key ONTIME incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('ONTIME'))==False
WARNING3: Key RA-OBJ incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('RA-OBJ'))==False
WARNING3: Key TASSIGN incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TASSIGN'))==False
WARNING3: Key TIERABSO incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TIERABSO'))==False
WARNING3: Key TIERRELA incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TIERRELA'))==False
WARNING3: Key TIME-END incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TIME-END'))==False
WARNING3: Key TIME-OBS incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TIME-OBS'))==False
WARNING3: Key TIMEREF incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TIMEREF'))==False
WARNING3: Key TIMESYS incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TIMESYS'))==False
WARNING3: Key TIMEUNIT incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TIMEUNIT'))==False
WARNING3: Key TIMEZERO incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('TIMEZERO') or ( h.Exists('TIMEZERI') and h.Exists('TIMEZERF') )"
        Eval(h.Exists('TIMEZERO'))==False
        Eval(h.Exists('TIMEZERI'))==False
        Eval(h.Exists('TIMEZERF'))==False
WARNING3: Key TIMVERSN incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TIMVERSN'))==False
WARNING3: Key TLMAX* incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TLMAX*'))==False
WARNING3: Key TLMIN* incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('TLMIN*'))==False
WARNING3: Key TSTART incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('TSTART') or (h.Exists('TSTARTI') and h.Exists('TSTARTF'))"
        Eval(h.Exists('TSTART'))==False
        Eval(h.Exists('TSTARTI'))==False
        Eval(h.Exists('TSTARTF'))==False
WARNING3: Key TSTOP incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.Exists('TSTOP') or (h.Exists('TSTOPI') and h.Exists('TSTOPF'))"
        Eval(h.Exists('TSTOP'))==False
        Eval(h.Exists('TSTOPI'))==False
        Eval(h.Exists('TSTOPF'))==False
WARNING3: Key VIGNAPP incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('VIGNAPP'))==False
WARNING3: Key VIGNET incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('VIGNET'))==False
WARNING3: Key XFLT* incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.Exists('XFLT*'))==False

Checking columns:

ERROR: column AREASCAL incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.hasCol('AREASCAL') or h.Exists('AREASCAL')"
        Eval(h.hasCol('AREASCAL'))==False
        Eval(h.Exists('AREASCAL'))==False
ERROR: column BACKSCAL incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.hasCol('BACKSCAL') or h.Exists('BACKSCAL')"
        Eval(h.hasCol('BACKSCAL'))==False
        Eval(h.Exists('BACKSCAL'))==False
ERROR: column CHANNEL incorrect in 2a0335.001.Z[SPECTABLE]
        Eval(h.hasCol('CHANNEL'))==False
ERROR: column GROUPING incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.hasCol('GROUPING') or h.hasCol('DQF') or h.hasVal('GROUPING',0)"
        Eval(h.hasCol('GROUPING'))==False
        Eval(h.hasCol('DQF'))==False
        Eval(h.hasVal('GROUPING',0))==False
ERROR: column QUALITY incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.hasCol('QUALITY') or h.hasCol('DQF') or h.hasVal('QUALITY',0)"
        Eval(h.hasCol('QUALITY'))==False
        Eval(h.hasCol('DQF'))==False
        Eval(h.hasVal('QUALITY',0))==False
ERROR: column SYS_ERR incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.hasCol('SYS_ERR',part=True) or h.hasVal('SYS_ERR',0)"
        Eval(h.hasCol('SYS_ERR',part=True))==None
        Eval(h.hasVal('SYS_ERR',0))==False
WARNING3: column SYS_ERR2 incorrect in 2a0335.001.Z[SPECTABLE]
        Full requirement is:  "h.hasCol('SYS_ERR') or h.hasVal('SYS_ERR',0)"
        Eval(h.hasCol('SYS_ERR'))==False
        Eval(h.hasVal('SYS_ERR',0))==False

=============== 18 Errors; 0 (level==2) warnings;  42 (level==3) warnings found in 1 extensions checked ===============


===========================================================

FAILURE: inputs/einstein/spectra/2a0335.001.Z is not a Valid OGIP formatted file
Please see OGIP/92-007: The OGIP Spectral File Format
Available at
   https://heasarc.gsfc.nasa.gov/docs/heasarc/ofwg/docs/summary/ogip_92_007_summary.html
